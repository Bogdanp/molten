{
  "openapi": "3.0.1",
  "info": {
    "title": "Pet Store",
    "description": "An example application that generates OpenAPI schema.",
    "version": "0.1.0"
  },
  "paths": {
    "/docs": {
      "get": {
        "tags": [],
        "operationId": "OpenAPIUIHandler",
        "description": "Renders the Swagger UI.",
        "parameters": [],
        "deprecated": false,
        "responses": {
          "200": {
            "description": null
          }
        },
        "security": [
          {
            "Bearer Authorization": []
          }
        ]
      }
    },
    "/schema.json": {
      "get": {
        "tags": [],
        "operationId": "schema",
        "description": "Generates an OpenAPI v3 document.",
        "parameters": [],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {}
          }
        },
        "security": [
          {
            "Bearer Authorization": []
          }
        ]
      }
    },
    "/v0/pets": {
      "post": {
        "tags": [
          "pets"
        ],
        "operationId": "add_pet_deprecated",
        "description": "",
        "parameters": [
          {
            "name": "accept",
            "in": "header",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "deprecated": true,
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tests.openapi.test_openapi.Pet"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authorization": []
          }
        ]
      }
    },
    "/v1/pets": {
      "post": {
        "tags": [
          "pets"
        ],
        "operationId": "add_pet",
        "description": "Add a new pet to the store.",
        "parameters": [],
        "deprecated": false,
        "responses": {
          "201": {
            "description": "The pet was successfully added.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tests.openapi.test_openapi.Pet"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tests.openapi.test_openapi.Pet"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/tests.openapi.test_openapi.Pet"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/tests.openapi.test_openapi.Pet"
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "pets"
        ],
        "operationId": "list_pets",
        "description": "",
        "parameters": [],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tests.openapi.test_openapi.Pet"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authorization": []
          }
        ]
      }
    },
    "/v1/pets/{pet_id}": {
      "put": {
        "tags": [
          "pets"
        ],
        "operationId": "update_pet",
        "description": "Update an existing pet.",
        "parameters": [
          {
            "name": "pet_id",
            "in": "path",
            "description": "The id of an existing pet.",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tests.openapi.test_openapi.Pet"
                }
              }
            }
          },
          "404": {
            "description": "The requested pet could not be found."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tests.openapi.test_openapi.Pet"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/tests.openapi.test_openapi.Pet"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/tests.openapi.test_openapi.Pet"
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "pets"
        ],
        "operationId": "delete_pet",
        "description": "Delete an existing pet.",
        "parameters": [
          {
            "name": "pet_id",
            "in": "path",
            "description": "The id of an existing pet.",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "deprecated": false,
        "responses": {
          "204": {
            "description": "The pet was successfully deleted."
          },
          "404": {
            "description": "The requested pet could not be found."
          }
        },
        "security": [
          {
            "Bearer Authorization": []
          }
        ]
      }
    },
    "/v1/pets/{pet_id}/photos": {
      "post": {
        "tags": [
          "pets"
        ],
        "operationId": "add_photo",
        "description": "Add a photo to a pet.",
        "parameters": [
          {
            "name": "pet_id",
            "in": "path",
            "description": "The id of an existing pet.",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "deprecated": false,
        "responses": {
          "201": {
            "description": "The photo was sucessfully added.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tests.openapi.test_openapi.Photo"
                }
              }
            }
          },
          "404": {
            "description": "The requested pet could not be found."
          }
        },
        "security": [
          {
            "Bearer Authorization": []
          }
        ]
      }
    },
    "/v1/users/current/settings": {
      "put": {
        "tags": [
          "users"
        ],
        "operationId": "update_settings",
        "description": "",
        "parameters": [],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tests.openapi.test_openapi.Settings"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tests.openapi.test_openapi.Settings"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/tests.openapi.test_openapi.Settings"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/tests.openapi.test_openapi.Settings"
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authorization": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "tests.openapi.test_openapi.Category": {
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "name": {
            "type": "string"
          }
        }
      },
      "tests.openapi.test_openapi.Pet": {
        "type": "object",
        "required": [
          "name",
          "photos",
          "status"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tests.openapi.test_openapi.Tag"
            }
          },
          "photos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tests.openapi.test_openapi.Photo"
            },
            "readOnly": true
          },
          "category": {
            "$ref": "#/components/schemas/tests.openapi.test_openapi.Category"
          },
          "metadata": {
            "type": "object"
          },
          "status": {
            "type": "string",
            "enum": [
              "available",
              "pending",
              "sold"
            ]
          }
        }
      },
      "tests.openapi.test_openapi.Photo": {
        "type": "object",
        "required": [
          "url"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "url": {
            "type": "string"
          }
        }
      },
      "tests.openapi.test_openapi.Settings": {
        "type": "object",
        "required": [
          "last_updated_at"
        ],
        "properties": {
          "xs": {
            "type": "array",
            "items": {
              "description": "Can be any value, including null.",
              "nullable": true
            }
          },
          "last_updated_at": {
            "type": "string"
          }
        }
      },
      "tests.openapi.test_openapi.Tag": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 10
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer Authorization": {
        "name": "Bearer Authorization",
        "scheme": "bearer",
        "type": "http"
      }
    }
  }
}